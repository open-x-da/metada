name: Windows-GNU

on:
  push:
    branches: [ master ]
    paths:
      - '.github/workflows/windows.yaml'
      - 'cmake/**'
      - 'src/**'
      - 'tests/**'
      - 'CMakeLists.txt'
  pull_request:
    branches: [ master ]
    paths:
      - '.github/workflows/windows.yaml'
      - 'cmake/**'
      - 'src/**'
      - 'tests/**'
      - 'CMakeLists.txt'

jobs:
  build:
    name: Build & Test with MinGW GCC (${{ matrix.build_type }})
    runs-on: windows-latest
    defaults:
      run:
        shell: msys2 {0}
        
    strategy:
      matrix:
        build_type: [Debug, Release]
      fail-fast: false

    steps:
    - name: Configure case-sensitive directory
      shell: cmd
      run: |
        fsutil.exe file setCaseSensitiveInfo %GITHUB_WORKSPACE% enable
        cd %GITHUB_WORKSPACE%

    - uses: actions/checkout@v2
        
    - name: Setup MSYS2
      uses: msys2/setup-msys2@v2
      with:
        msystem: MINGW64
        update: true
        install: >-
          git
          mingw-w64-x86_64-gcc
          mingw-w64-x86_64-gcc-fortran
          mingw-w64-x86_64-gdb
          mingw-w64-x86_64-cmake
          mingw-w64-x86_64-ninja
          mingw-w64-x86_64-python
          mingw-w64-x86_64-python-pip
          mingw-w64-x86_64-python-numpy
          mingw-w64-x86_64-gtest
          mingw-w64-x86_64-clang-tools-extra
          mingw-w64-x86_64-lcov
          mingw-w64-x86_64-yaml-cpp
          mingw-w64-x86_64-nlohmann-json
          mingw-w64-x86_64-netcdf
          mingw-w64-x86_64-netcdf-cxx
          mingw-w64-x86_64-eigen3
          
    - name: Install xtl and xtensor
      run: |
        git clone https://github.com/xtensor-stack/xtl.git
        mkdir xtl/build
        cd xtl/build
        cmake .. -G Ninja -DCMAKE_INSTALL_PREFIX=/mingw64
        cmake --build .
        ninja install
        cd ../..
        git clone https://github.com/xtensor-stack/xtensor.git
        mkdir xtensor/build
        cd xtensor/build
        cmake .. -G Ninja -DCMAKE_INSTALL_PREFIX=/mingw64
        cmake --build .
        ninja install

    - name: Install ng-log
      run: |
        git clone --depth 1 --branch v0.8.0 https://github.com/ng-log/ng-log.git
        cd ng-log
        mkdir build
        cd build
        cmake .. -G Ninja -DCMAKE_BUILD_TYPE=Release -DCMAKE_INSTALL_PREFIX=/mingw64
        ninja
        ninja install

    - name: Configure CMake
      run: |
        mkdir build
        cd build
        cmake -G Ninja \
          -DPython3_ROOT_DIR=/mingw64 \
          -DPython3_EXECUTABLE=/mingw64/bin/python3 \
          -DCMAKE_BUILD_TYPE=${{ matrix.build_type }} \
          ..

    - name: Build
      run: |
        cd build
        cmake --build . --verbose

    - name: Test
      run: |
        cd build
        ctest --output-on-failure 